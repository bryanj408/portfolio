/*
Sequence of events in order for the link styling to work
1. Visited 2. Hover 3. Active 4.

CSS VARIABLESS use "--
SASS VARIABLES use "$"
*/

:root {
  --text-color: #000;
  --primary-color: #357b70;
  --primary-color-dark: #05676e;
  --primary-color-light: #489c79;
  --secondary-color: #cd5c5c;
  --page-color: #f0f0f0;
  --background-color: #357b70;
  --white: #fff;
  --span: #9c192e;
  --grid-color: #9d9d9d;
  --sun-yellow: #edc655;
  --sun-light-yellow: #fcffad;
  --sun-orange: #f76414;
  --button-border: rgba(0, 0, 0, 0.3);
}

* {
  box-sizing: border-box;
}

body {
  font-family: 'Barlow', sans-serif;
  font-weight: 400;
  font-size: 16px;
  color: var(--text-color);
  line-height: 1.6;
  background-color: var(--page-color);
}

h1 {
  font-size: 30px;
  font-weight: 700;
}

h2 {
  font-size: 24px;
  font-weight: 700;
}

h3 {
  font-size: 18px;
  font-weight: 700;
}

a {
  color: var(--primary-color);
}

a:visited {
  /* visited link */
  color: var(--primary-color-dark);
}

a:hover,
a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}

a:active {
  /* selected link */
  color: var(--primary-color-light);
}

.button,
button {
  /* overwrites browser defaults and resets the border */
  border: none;
  margin: 0 auto;

  /* takes the font from the outer container */
  font-family: inherit;

  /* styles the background color, font color, and text decoration (underline, etc.
  ) of the button */
  background-color: var(--background-color);
  color: var(--white);
  text-decoration: none;

  /* adds spacing to the button (this will be discussed more in-depth later) */
  padding: 10px;
  border-radius: 3px;

  /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid var(--button-border);
  transition-duration: 0.2s;
  transition-property: opacity;
}

/* Non page-break allowing you to customize the word "web" */
span {
  color: var(--span);
}

button:hover,
button:focus,
.button:hover,
.button:focus {
  cursor: pointer; /* changes cursor to pointer hand */
  opacity: 0.8; /* changes opacity to 80% while hovering */
  font-size: 18px;
}

a.button {
  background-color: var(--secondary-color);
  color: var(--white);
}

.button_secondary {
  background-color: var(--secondary-color);
  color: white;
}

/* This makes the underline dissaperear when you hover over a link */
.navigation-list__item--active {
  text-decoration: none;
}

.profile_portrait {
  float: left;
  width: 250px;
  height: auto;
  margin-right: 40px;
  border-radius: 50%;
}

.profile {
  max-width: 700px;
  margin: 0 auto;
}

/* Ensures that that total size of boxes doesn't stack or go above 100%
For when you consider padding, etc. */

.page-header {
  display: flex;
  width: 100%;
  padding: 5px;
  border-style: outset;
}

.page-header__item {
  flex: 0 1 200px;
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.page-footer {
  clear: both;
  display: flex;
  flex-direction: column;
  text-align: center;
}

.table {
  margin: 0 auto;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

/* FOR THE "WORK" PAGE (GRID LAYOUT) */
.grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 20px;
}

/* Start grid fallback to older browsers */
.grid__item {
  display: inline-block;
  width: 33%;
}

@supports (display: grid) {
  .grid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
    margin: 0;
  }
}

.grid__item {
  background-color: var(--grid-color);
  width: auto;
  min-height: auto;
  margin: 0;
}

/* End grid fallback for older browsers */

/* This changes the grid layout
.grid__item:last-child {
  grid-column-start: 3;
  grid-column-end: 3;
  grid-row-start: 1;
  grid-row-end: 3;
}
 You can also shorthand this ^^
  grid-column: 3 / 3;
  grid-row: 1 / 3;
*/

/* Modifies grid layout to be able to work across multiple screens
this allows the colums to go down to 1 row whic his easier to red on a phone for ex. */
@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }

  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }

  h1 {
    font-size: 22px;
  }
}

/* keyframes in relation to sun. changes color of sun with animaiton */
@keyframes color-change {
  0% {
    fill: var(--sun-yellow);
  }

  50% {
    fill: var(--sun-light-yellow);
  }

  100% {
    fill: var(--sun-orange);
  }
}

.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

/* Relation to clouds. moves the cloud from left to right */
@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }

  to {
    transform: translate(200px, 50px);
  }
}

.cloud-front {
  animation-duration: 30s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

.cloud-back {
  animation-duration: 30s;
  animation-name: cloud-move-reverse;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }

  to {
    transform: translate(100px, 48px);
  }
}
